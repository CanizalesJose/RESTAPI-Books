tags:
  - name: Usuarios
    description: Rutas relacionadas con el proceso de autenticación, validación de acceso y gestión de usuarios.

/api/users/validAdmin:
  get:
    tags:
      - Usuarios
    summary: Ruta pública. Verificar la validez de un usuario administrador a través de su token.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la API a través de la ruta /login
    responses:
      200:
        description: El token es valido y sigue vigente, además de estar firmado por un usuario administrador.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el contexto de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/validWorker:
  get:
    tags:
      - Usuarios
    summary: Ruta pública. Verifica la validez de un usuario empleado o administrador a través de su token.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la API a través de la ruta /login
    responses:
      200:
        description: El token es valido y sigue vigente, además de estar firmado por un usuario administrador.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/findMe:
  get:
    tags:
      - Usuarios
    summary: Ruta protegida para usuarios. Regresa los datos personales de una cuenta.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la API a través de la ruta /login
    responses:
      200:
        description: Regresa un objeto JSON con el parametro User que se encuentra firmado en el Token usado para acceder a la ruta.
        content: 
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  description: Mensaje dinámico que detalla el problema de la petición.
                  properties:
                    username:
                      type: string
                      description: Nombre del usuario
                    usertype:
                      type: string
                      description: Tipo de usuario (admin, client o worker).
                    contactNumber:
                      type: string
                      description: Número de contacto del usuario
                    email:
                      type: string
                      description: Correo electronico del usuario
                    penalized:
                      type: boolean
                      description: Si el usuario tiene mas de una semana de atraso con un pedido es penalizado y no puede realizar mas pedidos.
      400:
        description: Error en los parámetros de la petición.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/findAll:
  get:
    tags:
      - Usuarios
    summary: Ruta protegida solo para administradores. Regresa todos los usuarios registrados.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la api a través de la ruta /login
    responses:
      200:
        description: Regresa una lista de usuarios
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre de usuario que lo identifica
                usertype:
                  type: string
                  description: Tipo de usuario y el alcance de sus privilegios
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/login/{username}:
  post:
    parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
        description: El nombre del usuario que esta generando el token
    tags:
      - Usuarios
    summary: Ruta pública. A partir de unas credenciales válidas de acceso, genera un token firmado con los datos del usuario. Expira en 4 horas.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - password
            properties:
              password:
                type: string
                description: Contraseña secreta de usuario, de preferencia usar una fuerte. Debe tener entre 1 y 100 caracteres. No hay requisitos especiales.
    responses:
      201:
        description: Autenticación exitosa, se devuelve un token de autenticación.
        content: 
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Token de autenticación. Esta firmado por el usuario que la generó y tiene una validez de 8 horas, una jornada laboral.
                username:
                  type: string
                  description: Nombre del usuario que generó el token.
                usertype:
                  type: string
                  description: Tipo de usuario autenticado, puede ser admin o client.
      400:
        description: Error en la solicitud. Puede referirse a un dato mal mandado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Credenciales incorrectas.
        content:
          application/json:
            type: object
            properties:
              message:
                type: string
                description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/validToken:
  post:
    tags:
      - Usuarios
    summary: Ruta pública. Verifica la validez de un token.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la api a través de la ruta /login
    responses:
      200:
        description: El token es valido y sigue vigente para su uso en las rutas protegidas de la API
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre del usuario que generó el token en primer lugar
                usertype:
                  type: string
                  descripcion: Tipo de usuario que generó el token en primer lugar. Limita el acceso a ciertas rutas. Puede ser admin o client.
                iat:
                  type: integer
                  description: Unix timestamp del momento en que fue generado el token.
                exp:
                  type: integer
                  description: Unix timestamp del momento en que expirará el token.
      401:
        description: Token rechazado.
        content:
          application/json:
            schema:
              type: object
              properties:
                clearToken:
                  type: boolean
                  description: Recomendación de limpiar el token del cliente.

/api/users/register/{username}:
  post:
    tags:
      - Usuarios
    summary: Ruta protegida solo para administradores. Genera un nuevo usuario con cualquier dato y privilegio.
    parameters:
      - in: path
        name: username
        description: Nombre del usuario que se esta generando
        schema:
          type: string
        required: true
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la api a través de la ruta /login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - password
              - usertype
              - contactNumber
              - email
            properties:
              password:
                type: string
                description: Contraseña de usuario, no puede estar vacío y debe ser menor a 100 caracteres. No tiene requisitos especiales.
              usertype:
                type: string
                description: Es el tipo de usuario, definirá los privilegios y acceso a rutas de la API, así como debería limitar su acceso a la aplicación. Solo puede ser admin o client.
              contactNumber:
                type: string
                description: Número de contacto del usuario. Debe tener una longitud igual o menor a 12 caracteres, dejando libre el uso del formato 123-123-1234 o 1234567890.
              email:
                type: string
                description: Correo electronico del usuario. Debe tener menos de 100 caracteres y el formato estándar de un correo.
    responses:
      201:
        description: Nuevo usuario creado
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el resultado de la petición.
      400:
        description: Error en la petición
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/registerClient/{username}:
  post:
    tags:
      - Usuarios
    summary: Ruga pública. Registra un nuevo usuario cliente.
    parameters:
      - in: path
        name: username
        description: Nombre del cliente generado
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              contactNumber:
                type: string
                description: Número de contacto del usuario. Debe tener una longitud igual o menor a 12 caracteres, dejando libre el uso del formato 123-123-1234 o 1234567890.
              email:
                type: string
                description: Correo electronico del usuario. Debe tener menos de 100 caracteres y el formato estándar de un correo.
              password:
                type: string
                description: Contraseña de usuario, no puede estar vacío y debe ser menor a 100 caracteres. No tiene requisitos especiales.
            required:
              - password
    responses:
      200:
        description: La petición se realizó con éxito y un nuevo recurso se ha creado con los parámetros enviados y el tipo de usuario cliente.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      400:
        description: Hubo un error en la petición, generalmente por error en la petición del cliente. Algún dato faltante o con formato equivocado.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/update/{username}:
  patch:
    tags:
      - Usuarios
    summary: Ruta protegida solo para administradores. Actualiza los datos de un usuario sin pedir credenciales del usuario modificado.
    parameters:
      - in: path
        name: username
        required: true
        description: El nombre del usuario que se está actualizando. Este usuario no puede ser el mismo que firmó el token de autorización.
        schema:
          type: string
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la api a través de la ruta /login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - usertype
              - contactNumber
              - email
            properties:
              password:
                type: string
                description: Nueva contraseña que reemplazará a la antigüa. Dato opcional que si no se especifica, se mantendrá el valor anterior.
              usertype:
                type: string
                description: El nuevo tipo de usuario del usuario. Puede ser admin o client.
              contactNumber:
                type: string
                description: Un nuevo número de contacto. Debe tener el formato 1234567890 o 123-123-1234.
              email:
                type: string
                description: Nuevo correo electronico, debe tener el formato estándar y no tener mas de 100 caracteres.
    responses:
      201:
        description: El usuario se ha actualizado correctamente con todos los parametros enviados.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el contexto de la petición.
      400:
        description: Hubo un error con alguno de los parámetros
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/updateClient:
  patch:
    tags:
      - Usuarios
    summary: Ruta protegida para usuarios. Actualiza los datos de una cuenta.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la API a través de la ruta /login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              contactNumber:
                type: string
                description: Nuevo número de contacto
              email:
                type: string
                description: Nuevo correo electronico
              currentPassword:
                type: string
                description: Contraseña actual del usuario
              password:
                type: string
                description: Nueva contraseña del usuario
            required:
              - contactNumber
              - email
              - currentPassword
    responses:
      200:
        description: El usuario se ha actualizado con los datos enviados.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el contexto de la petición.
      400:
        description: Error en alguno de los parametros.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.

/api/users/delete:
  delete:
    tags:
      - Usuarios
    summary: Ruta protegida para administradores. Elimina un usuario bajo un contexto de altos privilegios, pero no si tiene pedidos.
    parameters:
      - in: header
        name: token
        schema:
          type: string
        required: true
        description: Token de autenticación firmado por la api a través de la ruta /login
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
                description: Nombre de usuario, debe tener entre 0 y 15 caracteres. Debe existir en primer lugar.
    responses:
      200:
        description: El usuario se ha eliminado correctamente
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el contexto de la petición.
      400:
        description: Hubo un error con el parámetro, ya sea un mal formado, no fue mandado o la busqueda no arrojo resultados con ese parametro.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      401:
        description: Token rechazado.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      403:
        description: Permisos insuficientes
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.
      500:
        description: Error interno en el servidor.
        content: 
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Mensaje dinámico que detalla el problema de la petición.